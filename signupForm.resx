<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing"">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>